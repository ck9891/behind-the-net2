name: Seed Database

on:
  workflow_dispatch:
  push:
    branches:
      - 'data/seed-*'

jobs:
  seed-database:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Run Prisma Migrations
        run: npx prisma migrate deploy

      - name: Run database seed
        run: npx prisma db seed

      - name: Export database to SQL
        run: |
          mkdir -p ./tmp
          echo ".mode insert" > ./tmp/dump.sql
          echo ".bail on" >> ./tmp/dump.sql
          echo "BEGIN TRANSACTION;" >> ./tmp/dump.sql
          sqlite3 $DATABASE_URL ".schema" | grep -v "sqlite_sequence" >> ./tmp/dump.sql
          sqlite3 $DATABASE_URL ".dump" | grep "^INSERT" >> ./tmp/dump.sql
          echo "COMMIT;" >> ./tmp/dump.sql

      - name: Debug - Print first 10 lines of SQL dump
        run: head -n 10 ./tmp/dump.sql

      - name: Install Fly.io CLI
        run: curl -L https://fly.io/install.sh | sh

      - name: Deploy to Fly.io
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: |
          /home/runner/.fly/bin/flyctl auth token $FLY_API_TOKEN
          /home/runner/.fly/bin/flyctl ssh console -C "sqlite3 /data/sqlite.db < /dev/stdin" < ./tmp/dump.sql

      - name: Upload SQL dump as artifact
        uses: actions/upload-artifact@v2
        with:
          name: database-dump
          path: ./tmp/dump.sql
